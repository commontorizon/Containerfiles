# Copyright (c) 2023 Matheus Castello
# SPDX-License-Identifier: MIT

##
# Board architecture
##
ARG IMAGE_ARCH=

##
# The registry and the namespace
##
ARG BASE_REGISTRY=

##
# Base container image name
##
ARG BASE_IMAGE=

##
# Base container version
##
ARG BASE_VERSION=

##
# GPU prefix
##
ARG GPU=

ARG COG_VERSION=0.18.4

FROM ${BASE_REGISTRY}${BASE_IMAGE}${GPU}:${BASE_VERSION} AS Builder

# Install necessary packages for building Cog
RUN apt-get -y update && \
    apt-get install -y --no-install-recommends \
    libwpewebkit-1.1-dev \
    devscripts \
    curl \
    debhelper \
    libwpebackend-fdo-1.0-dev \
    meson \
    libmanette-0.2-dev \
    libinput-dev \
    libgbm-dev \
    libdrm-dev \
    debian-keyring && \
    apt-get clean && apt-get autoremove && rm -rf /var/lib/apt/lists/*

# Download the Cog source package
RUN dget http://deb.debian.org/debian/pool/main/c/cog/cog_${COG_VERSION}-1.dsc

# Change to the Cog source directory
WORKDIR cog-${COG_VERSION}

# Build the Cog package
RUN debian/rules binary

FROM ${BASE_REGISTRY}${BASE_IMAGE}${GPU}:${BASE_VERSION} AS Deploy

# Copy the .deb package from the Builder stage
COPY --from=builder /cog-${COG_VERSION}/cog_${COG_VERSION}-1_${IMAGE_ARCH}.deb /tmp/

# Install the generated .deb package
RUN apt install -y /tmp/cog_${COG_VERSION}-1_${IMAGE_ARCH}.deb && rm /tmp/cog_${COG_VERSION}-1_${IMAGE_ARCH}.deb

COPY start-cog.sh /usr/bin/start-browser
COPY wait4.sh /usr/bin/wait4

RUN chmod +x /usr/bin/start-browser && \
    chmod +x /usr/bin/wait4

USER torizon

ENV DISPLAY=:0
ENV COG_PLATFORM_WL_VIEW_FULLSCREEN=1

ENTRYPOINT ["/usr/bin/start-browser"]
CMD ["http://www.torizon.io"]
